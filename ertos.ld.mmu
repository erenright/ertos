/* ENTRY(0x00100000) */
start = 0x00100000;

C_STACK_SIZE	= 4096;
IRQ_STACK_SIZE	= 4096;
FIQ_STACK_SIZE	= 4096;
SVC_STACK_SIZE	= 4096;
ABT_STACK_SIZE	= 4096;
UND_STACK_SIZE	= 4096;

HEAP_SIZE	= 0x00100000;	/* 1MB heap */

KERNELBASE  = 0xF0000000;
RAM_START   = 0x00100000;

SECTIONS
{
	.text KERNELBASE : AT (RAM_START)
	{
		__text_start__ = . ;
		startup.o;
		*(.text);
		*(.rodata);

		. = ALIGN(4);
		__text_end__ = . ;
	}

	.data KERNELBASE + SIZEOF(.text) : AT ( RAM_START + SIZEOF(.text) )
	{
		__data_load__ = __text_end__;
		__data_start__ = . ;

		KEEP(*(.jcr))
		*(.got.plt) *(.got)
		*(.shdata)
		*(.data .data.* .gnu.linkonce.d.*)

		. = ALIGN(4);
		__data_end__ = . ;
	}

	.bss KERNELBASE + SIZEOF(.text) + SIZEOF(.data) : AT ( ADDR(.data) + SIZEOF(.data) )
	{
		__bss_start__ = .;
		*(.bss);

		. = ALIGN(4);
		__bss_end__ = .;
	}

	.stack KERNELBASE + SIZEOF(.text) + SIZEOF(.data) + SIZEOF(.bss) : AT ( ADDR(.bss) + SIZEOF(.bss) )
	{
		. = ALIGN(4);
		__stack_start__ = .;

		. += IRQ_STACK_SIZE;
		. = ALIGN(4);
		__irq_stack_top__ = .;

		. += FIQ_STACK_SIZE;
		. = ALIGN(4);
		__fiq_stack_top__ = .;

		. += SVC_STACK_SIZE;
		. = ALIGN(4);
		__svc_stack_top__ = .;

		. += ABT_STACK_SIZE;
		. = ALIGN(4);
		__abt_stack_top__ = .;

		. += UND_STACK_SIZE;
		. = ALIGN(4);
		__und_stack_top__ = .;

		. += C_STACK_SIZE;
		. = ALIGN(4);
		__c_stack_top__ = .;

		__stack_end__ = .;
	}

	__end__ = .;
}
